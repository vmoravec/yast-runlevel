/**
 * Author:	Martin Vidner <mvidner@suse.cz>
 * Summary:	Init scripts dependency visualization
 * $Id$
 */
{
    /**
     * Coerce the dummy agent to return v when asked for p.
     * No temporary files needed ;-)
     */
    define void SCRTorture (path p, any v) ``{
	SCR::RegisterAgent(
	    p, `ag_dummy (
		``{
		    define term MakeDataMap (any V) ``{
			y2debug ("MDM");
			term DM = ``(DataMap ());
			// root path: use the default value
			DM = add (DM, $[]);
			DM = add (DM, V);
			return DM;
		    }
		}
		)
	    );

	term Armor = ``(MakeDataMap ());
	Armor = add (Armor, v);

	SCR::RegisterAgent(p, `ag_dummy (Armor));
    }

/*
    // testing miniature
    map services = $[
	"a": $[
	    "reqstart": ["b", "c"],
	    ],
	];
*/

    map services = SCR::Read (.target.ycp, "scripts.ycp.out");
    SCRTorture (.init.scripts.comments, services);

    import "RunlevelEd";
    import "Progress";
    Progress::set(false);
    RunlevelEd::Read ();
    string dot_graph = RunlevelEd::DotRequires ();
    SCR::Write (.target.string, "/dev/stdout", dot_graph);

}
